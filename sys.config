%% -*- erlang -*-
%%
%% ale
%% Configuration file for included erlang applications.
[
 %% SASL config
 {sasl, [
         {sasl_error_logger, {file, "log/sasl-error.log"}},
         {errlog_type, error},
         {error_logger_mf_dir, "log/sasl"},      % Log directory
         {error_logger_mf_maxbytes, 10485760},   % 10 MB max file size
         {error_logger_mf_maxfiles, 5}           % 5 files max
        ]},
 %% Lager config, see lager documentation
  {lager, [{log_root, "/tmp/log/lager"}, %% relative log_root not possible!!!!
	   {handlers, [
		      {lager_console_backend, info},
		      {lager_file_backend, 
		       [{file, "error.log"}, {level, error}, 
			{size, 10485760}, {date, "$D0"}, {count, 5}]},
		      {lager_file_backend, 
		       [{file, "console.log"}, {level, info}, 
			{size, 10485760}, {date, "$D0"}, {count, 5}]}
		     ]}
	  ]},
 %% Ale config.
 %% For format of trace filter and level, see lager doc.
 {ale, [
	%% {options, [{debug, true}]},
	{options, []},
	%% trace_file - default file for traces to file
	{trace_file, "debug.log"}, %% Path is from lager log_root
	%% traces - list({list(Filter:tuple()), Level}) %% to console
	%%          list({list(Filter:tuple()), Level, File}) %% to file
	%% Filter for ex {module, Module}
	{traces, [
	%%	  {[{module, sz_master}, {function, node}], debug}, 
	%%	  {[{module, sz_node}], info, "/tmp/info.log"}
	%%	  {[{module, sz_node}], debug, "debug.log"} 
		 ]}
       ]}
].
